/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class net_sourceforge_lame_Lame */

#ifndef _Included_net_sourceforge_lame_Lame
#define _Included_net_sourceforge_lame_Lame
#ifdef __cplusplus
extern "C" {
#endif
#undef net_sourceforge_lame_Lame_MP3_BUFFER_SIZE
#define net_sourceforge_lame_Lame_MP3_BUFFER_SIZE 1024L
#undef net_sourceforge_lame_Lame_LAME_PRESET_DEFAULT
#define net_sourceforge_lame_Lame_LAME_PRESET_DEFAULT 0L
#undef net_sourceforge_lame_Lame_LAME_PRESET_MEDIUM
#define net_sourceforge_lame_Lame_LAME_PRESET_MEDIUM 1L
#undef net_sourceforge_lame_Lame_LAME_PRESET_STANDARD
#define net_sourceforge_lame_Lame_LAME_PRESET_STANDARD 2L
#undef net_sourceforge_lame_Lame_LAME_PRESET_EXTREME
#define net_sourceforge_lame_Lame_LAME_PRESET_EXTREME 3L
/*
 * Class:     net_sourceforge_lame_Lame
 * Method:    initializeEncoder
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_com_android_misoundrecorder_Lame_initEncoder
  (JNIEnv *, jclass, jint, jint, jint, jint, jfloat, jint);

/*
 * Class:     net_sourceforge_lame_Lame
 * Method:    encode
 * Signature: ([S[SI[BI)I
 */
JNIEXPORT jint JNICALL Java_com_android_misoundrecorder_Lame_encode
  (JNIEnv *, jclass, jshortArray, jshortArray, jint, jbyteArray, jint);

/*
 * Class:     net_sourceforge_lame_Lame
 * Method:    flushEncoder
 * Signature: ([BI)I
 */
JNIEXPORT jint JNICALL Java_com_android_misoundrecorder_Lame_flushEncoder
  (JNIEnv *, jclass, jbyteArray, jint);

/*
 * Class:     net_sourceforge_lame_Lame
 * Method:    closeEncoder
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_android_misoundrecorder_Lame_closeEncoder
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
